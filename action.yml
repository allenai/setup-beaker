name: setup-beaker
description: Set up the Beaker command-line client
branding:
  icon: package
  color: blue
inputs:
  token:
    description: Your Beaker token
    required: true
  workspace:
    description: The default workspace to use
    required: false
outputs:
  account:
    description: The name of the authenticated Beaker account
    value: ${{ steps.configure-beaker-client.outputs.account }}
runs:
  using: composite 
  steps:
    - name: Install Beaker client
      shell: bash
      run: |
        set -euxo pipefail

        mkdir -p "$HOME/bin"
        TMP=${{ runner.temp }}
        echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

        # Find available versions.
        echo "Available Beaker versions:"
        echo
        gh api /repos/allenai/beaker-service/deployments | jq -cr '[.[] | select(.production_environment)][] | [.ref, .created_at] | @tsv' > $TMP/beaker-versions.txt
        cat $TMP/beaker-versions.txt | awk '{printf("%-15s %s\n", $1, $2)}'

        VERSION=$(head -1 $TMP/beaker-versions.txt | awk '{print $1}')
        echo "Downloading Beaker CLI version $VERSION."
        echo

        ARCH=$(uname -p)
        OS=$(uname -s)
        
        # Detect architecture and OS.
        if [[ $ARCH == "arm" && $OS == "Darwin" ]]; then
          # macOS on M1 chipsets
          PATTERN='beaker-cli-darwin-arm64-v*.tar.gz'
        elif [[ $ARCH == "i386" && $OS == "Darwin" ]]; then
          # macOS on Intel chipsets
          PATTERN='beaker-cli-darwin-amd64-v*.tar.gz'
        elif [[ $ARCH == "x86_64" && $OS == "Linux" ]]; then
          # Linux on AMD64 chipsets
          PATTERN='beaker-cli-linux-amd64-v*.tar.gz'
        else
          echo "Unrecognized OS-Architecture combination:"
          echo "ARCH=$ARCH"
          echo "OS=$OS"
          exit 1
        fi

        # Download the release.
        mkdir $TMP/assets/
        gh --repo allenai/beaker-service release download -p $PATTERN -D $TMP/assets/ $VERSION
        tar -C $HOME/bin -zxf $TMP/assets/*.tar.gz beaker

        # Add to path.
        echo "$HOME/bin" >> "$GITHUB_PATH"

    - name: Configure Beaker client
      id: configure-beaker-client
      shell: bash
      run: |
        set -euo pipefail

        beaker config set user_token ${{ inputs.token }}

        if [[ ! -z "${{ inputs.workspace }}" ]]; then
          beaker config set default_workspace ${{ inputs.workspace }}
        fi

        # Validate config.
        beaker config test > /dev/null

        # Setup 'account' output.
        account=$(beaker account whoami --format=json | jq -r '.[0].name')
        echo "::set-output name=account::$account"

    - name: Print useful config info
      shell: bash
      run: |
        set -euo pipefail
        beaker --version
        echo "Authenticated as: '${{ steps.configure-beaker-client.outputs.account }}'"
